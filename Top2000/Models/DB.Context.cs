//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Top2000.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DB_A63478_DeechteTOP2000Entities : DbContext
    {
        public DB_A63478_DeechteTOP2000Entities()
            : base("name=DB_A63478_DeechteTOP2000Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Artiest> Artiests { get; set; }
        public virtual DbSet<Lijst> Lijsts { get; set; }
        public virtual DbSet<Song> Songs { get; set; }
        public virtual DbSet<Top2000Jaar> Top2000Jaar { get; set; }
    
        public virtual int spImport(string aRTIEST, string tITEL, Nullable<int> jAAR, Nullable<int> pOSITIE, Nullable<int> tOP2000JAAR)
        {
            var aRTIESTParameter = aRTIEST != null ?
                new ObjectParameter("ARTIEST", aRTIEST) :
                new ObjectParameter("ARTIEST", typeof(string));
    
            var tITELParameter = tITEL != null ?
                new ObjectParameter("TITEL", tITEL) :
                new ObjectParameter("TITEL", typeof(string));
    
            var jAARParameter = jAAR.HasValue ?
                new ObjectParameter("JAAR", jAAR) :
                new ObjectParameter("JAAR", typeof(int));
    
            var pOSITIEParameter = pOSITIE.HasValue ?
                new ObjectParameter("POSITIE", pOSITIE) :
                new ObjectParameter("POSITIE", typeof(int));
    
            var tOP2000JAARParameter = tOP2000JAAR.HasValue ?
                new ObjectParameter("TOP2000JAAR", tOP2000JAAR) :
                new ObjectParameter("TOP2000JAAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spImport", aRTIESTParameter, tITELParameter, jAARParameter, pOSITIEParameter, tOP2000JAARParameter);
        }
    
        public virtual ObjectResult<uspAllArtistSongs_Result> uspAllArtistSongs(Nullable<int> artist)
        {
            var artistParameter = artist.HasValue ?
                new ObjectParameter("artist", artist) :
                new ObjectParameter("artist", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspAllArtistSongs_Result>("uspAllArtistSongs", artistParameter);
        }
    
        public virtual ObjectResult<uspArtistWithMuchSongs_Result> uspArtistWithMuchSongs(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspArtistWithMuchSongs_Result>("uspArtistWithMuchSongs", yearParameter);
        }
    
        public virtual ObjectResult<uspGoneFromList_Result> uspGoneFromList(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGoneFromList_Result>("uspGoneFromList", yearParameter);
        }
    
        public virtual ObjectResult<uspNewlyListed_Result> uspNewlyListed(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspNewlyListed_Result>("uspNewlyListed", yearParameter);
        }
    
        public virtual ObjectResult<uspNumSongsPerArtistPerYear_Result> uspNumSongsPerArtistPerYear(Nullable<int> year, string artistName)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var artistNameParameter = artistName != null ?
                new ObjectParameter("artistName", artistName) :
                new ObjectParameter("artistName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspNumSongsPerArtistPerYear_Result>("uspNumSongsPerArtistPerYear", yearParameter, artistNameParameter);
        }
    
        public virtual ObjectResult<uspSongsGained100Places_Result> uspSongsGained100Places(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSongsGained100Places_Result>("uspSongsGained100Places", yearParameter);
        }
    
        public virtual ObjectResult<uspSongsGainedPlaces_Result> uspSongsGainedPlaces(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSongsGainedPlaces_Result>("uspSongsGainedPlaces", yearParameter);
        }
    
        public virtual ObjectResult<uspSongsLost100Places_Result> uspSongsLost100Places(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSongsLost100Places_Result>("uspSongsLost100Places", yearParameter);
        }
    
        public virtual ObjectResult<uspSongsLostPlaces_Result> uspSongsLostPlaces(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSongsLostPlaces_Result>("uspSongsLostPlaces", yearParameter);
        }
    
        public virtual ObjectResult<uspSongsOnSamePosition_Result> uspSongsOnSamePosition(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSongsOnSamePosition_Result>("uspSongsOnSamePosition", yearParameter);
        }
    
        public virtual ObjectResult<uspSongsPerYear_Result> uspSongsPerYear(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSongsPerYear_Result>("uspSongsPerYear", yearParameter);
        }
    
        public virtual ObjectResult<uspAllArtistSongsPertop2000Year_Result> uspAllArtistSongsPertop2000Year(Nullable<int> year, Nullable<int> artistID)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var artistIDParameter = artistID.HasValue ?
                new ObjectParameter("artistID", artistID) :
                new ObjectParameter("artistID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspAllArtistSongsPertop2000Year_Result>("uspAllArtistSongsPertop2000Year", yearParameter, artistIDParameter);
        }
    
        public virtual ObjectResult<uspAllSongPositions_Result> uspAllSongPositions(Nullable<int> songID)
        {
            var songIDParameter = songID.HasValue ?
                new ObjectParameter("songID", songID) :
                new ObjectParameter("songID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspAllSongPositions_Result>("uspAllSongPositions", songIDParameter);
        }
    
        public virtual ObjectResult<uspAllSongsWithAllPositions_Result> uspAllSongsWithAllPositions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspAllSongsWithAllPositions_Result>("uspAllSongsWithAllPositions");
        }
    
        public virtual ObjectResult<uspSongNumTimesListed_Result> uspSongNumTimesListed(Nullable<int> songID)
        {
            var songIDParameter = songID.HasValue ?
                new ObjectParameter("songID", songID) :
                new ObjectParameter("songID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSongNumTimesListed_Result>("uspSongNumTimesListed", songIDParameter);
        }
    
        public virtual ObjectResult<uspSongsReEntry_Result> uspSongsReEntry(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSongsReEntry_Result>("uspSongsReEntry", yearParameter);
        }
    
        public virtual ObjectResult<uspSongTotallyGoneFromList_Result> uspSongTotallyGoneFromList(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSongTotallyGoneFromList_Result>("uspSongTotallyGoneFromList", yearParameter);
        }
    }
}
